host: 0.0.0.0
port: 9091

jwt_secret: ${AUTHELIA_JWT_SECRET}

session:
  name: authelia_session
  secret: ${AUTHELIA_SECRET}
  expiration: 1h
  remember_me_duration: 2w
  inactivity: 300
  domain: ${DOMAIN_NAME}

  redis:
    host: redis
    port: 6379

log:
  file_path: /config/authelia.log

storage:
  encryption_key: ${AUTHELIA_JWT_SECRET}
  local:
    path: /config/db.sqlite3

regulation:
  max_retries: 3
  find_time: 120
  ban_time: 300

notifier:
  disable_startup_check: false

  filesystem:
    filename: /config/notification.txt

access_control:
  default_policy: deny

  rules:
    # Organizr
    - domain: home.${DOMAIN_NAME}
      policy: one_factor
    # Portainer
    - domain: portainer.${DOMAIN_NAME}
      subject: 'group:portainer'
      policy: one_factor
    # Traefik
    - domain: traefik.${DOMAIN_NAME}
      subject: 'group:traefik'
      policy: one_factor
    # Adminer
    - domain: adminer.${DOMAIN_NAME}
      subject: 'group:adminer'
      policy: one_factor
    # CodeServer
    - domain: code.${DOMAIN_NAME}
      subject: 'group:codeserver'
      policy: one_factor
    # Aria2
    - domain: aria2.${DOMAIN_NAME}
      subject: 'group:aria2'
      policy: one_factor
    # cAdvisor
    - domain: cadvisor.${DOMAIN_NAME}
      subject: 'group:cadvisor'
      policy: one_factor
    # AlertManager
    - domain: alertmanager.${DOMAIN_NAME}
      subject: 'group:alertmanager'
      policy: one_factor
    # Prometheus
    - domain: prometheus.${DOMAIN_NAME}
      subject: 'group:prometheus'
      policy: one_factor
    # Vpn
    - domain: vpn.${DOMAIN_NAME}
      subject: 'group:vpn'
      policy: one_factor
    # Transmission
    - domain: 
        - transmission.${DOMAIN_NAME}
        - transmissionvpn.${DOMAIN_NAME}
      subject: 'group:transmission'
      policy: one_factor
    # Jackett
    - domain: jackett.${DOMAIN_NAME}
      resources:
        - "/api/*"
      policy: bypass
    - domain: jackett.${DOMAIN_NAME}
      subject: 'group:jackett'
      policy: one_factor
    # Sonarr
    - domain: sonarr.${DOMAIN_NAME}
      subject: 'group:sonarr'
      policy: one_factor
    # Radarr
    - domain: radarr.${DOMAIN_NAME}
      subject: 'group:radarr'
      policy: one_factor
    # Readarr
    - domain: readarr.${DOMAIN_NAME}
      subject: 'group:readarr'
      policy: one_factor
    # Prowlarr
    - domain: prowlarr.${DOMAIN_NAME}
      subject: 'group:prowlarr'
      policy: one_factor
    # Actual Budget
    - domain: actual.${DOMAIN_NAME}
      resources:
        - "/sync/*"
      policy: bypass
    - domain: actual.${DOMAIN_NAME}
      subject: 'group:actual'
      policy: one_factor
    - domain: paperless.${DOMAIN_NAME}
      resources:
        - "/api/*"
      policy: bypass
    - domain: paperless.${DOMAIN_NAME}
      subject: 'group:paperless'
      policy: one_factor
    - domain: grafana.${DOMAIN_NAME}
      subject: 'group:grafana'
      policy: one_factor
    - domain: pihole.${DOMAIN_NAME}
      subject: 'group:pihole'
      policy: one_factor

authentication_backend:
  disable_reset_password: false

  ldap:
    url: ldap://openldap
    skip_verify: false
    base_dn: ${DOMAIN_COMPONENT}
    username_attribute: uid
    additional_users_dn: ou=users
    users_filter: (&({username_attribute}={input})(objectClass=person))
    additional_groups_dn: ou=groups
    groups_filter: (&(uniqueMember={dn})(objectclass=groupOfUniqueNames))
    group_name_attribute: cn
    mail_attribute: uid
    display_name_attribute: cn
    user: cn=admin,${DOMAIN_COMPONENT}
    password: ${ADMIN_PASSWORD}
